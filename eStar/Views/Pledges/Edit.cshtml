@model eStar.Models.Pledge

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Target</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @if (Model.PledgeStatusID == 1)
        {
            <div class="alert alert-info">
                <strong>Active</strong> This target is still active <b>@ViewBag.Days left!</b>
            </div>
        }
        else if (Model.PledgeStatusID == 2)
        {
            <div class="alert alert-danger">
                <strong>Unmet</strong> This target wasn't met by the set deadline.
            </div>
        }
        else
        {
            <div class="alert alert-success">
                <strong>Complete</strong> This target was completed by the deadline.
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PledgeID)
        @Html.HiddenFor(model => model.Guardian_User_ID)
        @Html.HiddenFor(model => model.PledgeStatusID)
        @Html.HiddenFor(model => model.Student_User_ID)

        <div class="form-group">
            <label class="control-label col-md-2">Student</label>
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Students.FullName, new { htmlAttributes = new { @class = "form-control"}})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
